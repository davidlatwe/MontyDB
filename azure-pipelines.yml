# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
   # When you paste this, please make sure the indentation is preserved
   # Fail out if any setups fail
   set -e

   # Delete old Pythons
   rm -rf $AGENT_TOOLSDIRECTORY/Python/2.7.16
   rm -rf $AGENT_TOOLSDIRECTORY/Python/3.5.7
   rm -rf $AGENT_TOOLSDIRECTORY/Python/3.7.3

   # Download new Pythons
   azcopy --recursive \
     --source https://vstsagenttools.blob.core.windows.net/tools/hostedtoolcache/linux/Python/2.7.15 \
     --destination $AGENT_TOOLSDIRECTORY/Python/2.7.15

   azcopy --recursive \
     --source https://vstsagenttools.blob.core.windows.net/tools/hostedtoolcache/linux/Python/3.5.5 \
     --destination $AGENT_TOOLSDIRECTORY/Python/3.5.5

   azcopy --recursive \
     --source https://vstsagenttools.blob.core.windows.net/tools/hostedtoolcache/linux/Python/3.7.2 \
     --destination $AGENT_TOOLSDIRECTORY/Python/3.7.2

   # Install new Pythons
   original_directory=$PWD
   setups=$(find $AGENT_TOOLSDIRECTORY/Python -name setup.sh)
   for setup in $setups; do
       chmod +x $setup;
       cd $(dirname $setup);
       ./$(basename $setup);
       cd $original_directory;
   done;
  displayName: 'Workaround: roll back Python versions'

- script: |
    wget https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.6.4.tgz
    tar xzf mongodb-linux-x86_64-3.6.4.tgz
    mongodb-linux-x86_64-3.6.4/bin/mongod --version
  displayName: 'Install MongoDB'

- script: |
    python -m pip install --upgrade pip
    python -m pip install --user pyyaml jsonschema pymongo
  displayName: 'Install dependencies'

- script: |
    mkdir mongodb-linux-x86_64-3.6.4/data
    mongodb-linux-x86_64-3.6.4/bin/mongod --dbpath mongodb-linux-x86_64-3.6.4/data --logpath mongodb-linux-x86_64-3.6.4/mongodb.log --fork

- script: |
    python -m pip install --user pytest pytest-azurepipelines pytest-cov
    python -m pytest --cov montydb --storage sqlite
    python -m pytest --cov montydb --storage flatfile --cov-append
    python -m pytest --cov montydb --storage memory --cov-append
  displayName: 'pytest'
